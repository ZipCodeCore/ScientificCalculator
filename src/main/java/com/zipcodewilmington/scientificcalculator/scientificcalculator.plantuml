@startuml

title __SCIENTIFICCALCULATOR's Class Diagram__\n

  namespace com.zipcodewilmington.scientificcalculator {
    class com.zipcodewilmington.scientificcalculator.Basic {
        {static} + add()
        {static} + divide()
        {static} + exponent()
        {static} + inverse()
        {static} + multiply()
        {static} + signChange()
        {static} + square()
        {static} + squareRoot()
        {static} + subtract()
    }
  }
  

  namespace com.zipcodewilmington.scientificcalculator {
    class com.zipcodewilmington.scientificcalculator.Console {
        {static} + BasicMenu()
        {static} + ExitCalc()
        {static} + ForAllMenus()
        {static} + LogFunctions()
        {static} + Memory()
        {static} + ModeChange()
        {static} + RotateDisplay()
        {static} + RunCalc()
        {static} + SciMenuHome()
        {static} + TrigFunctions()
        {static} + Utilities()
        {static} + getStringInput()
        {static} + print()
        {static} + println()
    }
  }
  

  namespace com.zipcodewilmington.scientificcalculator {
    class com.zipcodewilmington.scientificcalculator.MainApplication {
        {static} + main()
    }
  }
  

  namespace com.zipcodewilmington.scientificcalculator {
    class com.zipcodewilmington.scientificcalculator.Sci {
        {static} ~ memNum : double
        {static} ~ memoryStatus : String
        {static} + checkMemStatus()
        {static} + cosine()
        {static} + factorial()
        {static} + inverseCosine()
        {static} + inverseLogarithm()
        + inverseNaturalLogarithm()
        {static} + inverseSine()
        {static} + inverseTangent()
        {static} + logarithm()
        {static} + memClear()
        {static} + memPlus()
        {static} + naturalLogarithm()
        {static} + noMem()
        {static} + recall()
        {static} + sine()
        {static} + switchDisplayModeToBinary()
        {static} + switchDisplayModeToDecimal()
        {static} + switchDisplayModeToHexadecimal()
        {static} + switchDisplayModeToOctal()
        {static} + switchUnitsModeRotate()
        + switchUnitsModeString()
        {static} + tangent()
        {static} + yesMem()
    }
  }
  

  namespace com.zipcodewilmington.scientificcalculator {
    class com.zipcodewilmington.scientificcalculator.Utilities {
        {static} + switchCtoF()
        {static} + switchCtoK()
        {static} + switchFtoC()
        {static} + switchFtoK()
        {static} + switchKtoC()
        {static} + switchKtoF()
    }
  }
  



right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
